from config import *
import os
import pickle


def save_model_to_log(model, model_params, train_losses, train_accuracy, LOG_DIR):
    experiment_name = model_params['experiment_name']
    model_name = model_params['model_name']
    model_log_dir = os.path.join(LOG_DIR, experiment_name)
    os.mkdir(model_log_dir)
    model_log_file = os.path.join(model_log_dir, MODEL_INFO_LOG)
    model_train_losses_log_file = os.path.join(model_log_dir, MODEL_LOSS_INFO_LOG)
    model_train_accuracy_log_file = os.path.join(model_log_dir, MODEL_ACC_INFO_LOG)
    model_save_path = os.path.join(model_log_dir, model_name)

    with open(model_log_file, 'w') as file:
        file.write('-' * 30 + '\n')
        file.write('model architecture' + '\n')
        file.write('-' * 30 + '\n')
        file.write(str(model) + '\n')
        file.write('-' * 30 + '\n')
        file.write('model params' + '\n')
        file.write('-' * 30 + '\n')
        file.write(str(model_params) + '\n')
        file.write('-' * 30 + '\n')
        file.flush()

    with open(model_train_losses_log_file, 'wb') as file:
        pickle.dump(train_losses, file)
        file.flush()

    with open(model_train_accuracy_log_file, 'wb') as file:
        pickle.dump(train_accuracy, file)
        file.flush()

    torch.save(model.state_dict(), model_save_path)


def save_models_metadata_to_log(list_of_model_params, LOG_DIR, logfile=MODELMETA_INFO_LOG):
    logfile = os.path.join(LOG_DIR, logfile)
    with open(logfile, 'w') as file:
        file.write('-' * 30 + '\n')
        file.write('Models Metadata' + '\n')
        file.write('-' * 30 + '\n')
        file.write(str(list_of_model_params) + '\n')
        file.flush()


def print_line(print_len=30):
    print('-' * print_len)

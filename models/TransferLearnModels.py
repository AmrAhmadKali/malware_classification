import torch.nn as nn
from torchvision import models
import torch.nn.functional as F


class Resnet152_wrapper(nn.Module):
    def __init__(self, model_params):
        super(Resnet152_wrapper, self).__init__()
        self.model_params = model_params
        self.num_of_classes = model_params['num_of_classes']
        self.resnet152 = models.resnet152(pretrained=True)

        for param in self.resnet152.parameters():
            param.requires_grad = False

        self.fc_malware1 = nn.Linear(1000, 500)
        self.fc_malware2 = nn.Linear(500, self.num_of_classes)

    def forward(self, x):
        x = self.resnet152(x)
        x = self.fc_malware1(x)
        x = self.fc_malware2(x)
        return F.log_softmax(x, dim=1)
